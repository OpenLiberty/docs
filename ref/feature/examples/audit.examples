= Examples

== Audit File Handler

The audit file handler is made available by specifying the audit-1.0 feature.

The audit file handler can be customized by specifying attributes. For more information about specifying attributes, see https://www.openliberty.io/docs/ref/config/#auditFileHandler.html


When the maximum number of archived audit logs is reached, once the audit.log file that is currently being written to reaches its maximum size, then the oldest archived audit log is overwritten.

The following example shows a server.xml file that contains an Audit file handler with maxFiles, maxFileSize and compact mode attributes specified:

[source,xml]
----
<featureManager>

<feature>appSecurity-2.0</feature>

<feature>[.underline]#jsp#-2.2</feature>

<feature>[.underline]#servlet#-3.1</feature>

<feature>audit-1.0</feature>

<feature>[.underline]#timedexit#-1.0</feature>

</featureManager>

<auditFileHandler maxFiles="50" maxFileSize="100" compact=”true”>

</auditFileHandler>
----

In this example, the audit logs will be written to the default $\{server.output.dir}/logs. Each audit file will have a maximum 100MB size before being archived and new audit records written to a new audit.log. The maximum number of archived audit logs will be 50. Once 50 audit logs are archived, and the current audit.log file being written to reaches the 100MB size, then the oldest archived audit.log file will be overwritten.

All audit events and possible outcomes will be emitted to the audit logs.

== Events

To specify only those audit events and outcomes that may be of relevance in an environment, the <event> element can be defined with the audit event name and outcome.

The following example shows a server.xml file that specifies audit events and outcomes:

[source,xml]
----
<featureManager>

<feature>appSecurity-2.0</feature>

<feature>[.underline]#servlet#-4.0</feature>

<feature>audit-1.0</feature>

</featureManager>

<auditFileHandler

maxFiles="5"

maxFileSize="20"

compact="true">

<events name="AuditEvent_1" eventName="SECURITY_AUTHN" outcome="SUCCESS"/>

<events name="AuditEvent_2" eventName="SECURITY_AUTHN" outcome="REDIRECT"/> <events name="AuditEvent_3" eventName="SECURITY_AUTHN" outcome="FAILURE"/> <events name="AuditEvent_4" eventName="SECURITY_AUTHZ"/>

</auditFileHandler>
----

In the example, security authentication events only capture what outcome is a success, redirect or failure and security authorization events whose outcome includes all supported outcomes.

If an event is specified with only an outcome attribute, with no eventName specified, then no audit records will be produced. However, an eventName can be specified without an outcome attribute, in which case all possible outcomes for that eventName will be emitted.

== Encrypting and Signing Audit

It is important for the recorded audit data to be preserved in a way that manages to restrict access and protect the data.

The ability to both encrypt and sign the audit records data is provided.

To encrypt audit records, the encrypt attribute is specified in the auditFileHandler element, along with the alias name of the certificate that is used to encrypt the audit data, and the keystore in which that certificate exists.

To sign audit records, the sign attribute is specified in the auditFileHandler element, along with the alias name of the certificate that is used to sign the audit data, and the keystore in which that certificate exists.

SHA256withRSA is used as the default crypto algorithm for both encryption and signing.

The following example shows a server.xml file that contains the Audit file handler with encryption and signing enabled:

[source,xml]
----
<featureManager>

<feature>appSecurity-2.0</feature>

<feature>[.underline]#jsp#-2.2</feature>

<feature>[.underline]#servlet#-3.1</feature>

<feature>audit-1.0</feature>

</featureManager>

<keyStore

id="auditEncKeyStore”

password="Liberty" location="$\{server.config.dir}/resources/security/AuditEncryptionKeyStore.jks"

type="JKS" />

<keyStore

id="auditSignKeyStore"

password="\{[.underline]#xor#}EzY9Oi0rJg=="

location="$\{server.config.dir}/resources/security/AuditSigningKeyStore2.[.underline]#jks#"

type="JKS" />

<auditFileHandler

encrypt="true"

encryptAlias="[.underline]#auditencryption#"

encryptKeyStoreRef="auditEncKeyStore"

sign="true"

signingAlias="auditsigning2"

signingKeyStoreRef="auditSignKeyStore"

</auditFileHandler>
----

All audit events and possible outcomes are emitted to the audit logs.
